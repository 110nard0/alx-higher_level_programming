"""external doctests for 0-add_integer.py"""
# run test with: python3 -m doctest -v ./tests/0-add_integer.txt

Import module function to test:
add_integer adds 2 integers or floats
>>> add_integer = __import__('0-add_integer').add_integer


SUCCESS CASES

Test signed and unsigned ints and floats:
    >>> print(add_integer(2, 4))
    6
    >>> print(add_integer(20, -12))
    8
    >>> print(add_integer(3.14, 2.96))
    5
    >>> print(add_integer(-13.5, 25))
    12

Test default value of b=98
    >>> print(add_integer(5))
    103


FAIL CASES

Test missing arguments
    >>> print(add_integer(None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(None, None))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

Test additional arguments
    >>> print(add_integer(1, 2, 3))
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

Test other argument data types
    >>> print(add_integer("alx"))
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> print(add_integer(99, {0: "SWE", 1: "web dev"}))
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    
Test max/min numbers ("inf" is infinity):
    >>> print(add_integer(float("inf")))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
    
    >>> print(add_integer(float("-inf")))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer

Test special float NaN (not a number):
    >>> print(add_integer(float("NaN")))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
